@page "/expert-list"
@using CCP.Repositori.Data
@using CCPProject.Components.Layout
@using Microsoft.AspNetCore.Identity
@using CCP.Repositori.Entities
@using Microsoft.EntityFrameworkCore
@inject UserManager<AppUser> UserManager
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@layout Layout1
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar with Search Filter -->
            <div class="col-md-12 col-lg-4 col-xl-3 theiaStickySidebar">
                <div class="card search-filter">
                    <div class="card-header">
                        <h4 class="card-title mb-0">Search Filter</h4>
                    </div>
                    <div class="card-body">
                        <!-- Date Filter -->
                        <div class="filter-widget">
                            <div class="cal-icon">
                                <input type="text" class="form-control datetimepicker" placeholder="Select Date" @bind="selectedDate" @bind:event="oninput" />
                            </div>
                        </div>

                        <!-- Gender Filter -->
                        <div class="filter-widget">
                            <h4>Gender</h4>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="gender_type" @bind="filterMale" />
                                    <span class="checkmark"></span> Male Doctor
                                </label>
                            </div>
                            <div>
                                <label class="custom_check">
                                    <input type="checkbox" name="gender_type" @bind="filterFemale" />
                                    <span class="checkmark"></span> Female Doctor
                                </label>
                            </div>
                        </div>

                        <!-- Specialty Filter -->
                        <div class="filter-widget">
                            <h4>Select Specialist</h4>
                            @foreach (var specialty in availableSpecialties)
                            {
                                <div>
                                    <label class="custom_check">
                                        <input type="checkbox" name="select_specialist" @bind="@specialtyFilters[specialty.Name]" />
                                        <span class="checkmark"></span> @specialty.Name
                                    </label>
                                </div>
                            }
                        </div>

                        <!-- Search Button -->
                        <div class="btn-search">
                            <button type="button" class="btn btn-block" @onclick="ApplyFilters">Search</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Doctor List -->
            <div class="col-md-12 col-lg-8 col-xl-9">
                @if (filteredDoctors == null)
                {
                    <p>Loading doctors...</p>
                }
                else if (!filteredDoctors.Any())
                {
                    <p>No doctors found matching your criteria.</p>
                }
                else
                {
                    @foreach (var doctor in filteredDoctors)
                    {
                        <div class="card">
                            <div class="card-body">
                                <div class="doctor-widget">
                                    <div class="doc-info-left">
                                        <div class="doctor-img">
                                            <a href="@($"/expert-profile/{doctor.UserId}")">
                                                <img src="@doctor.Avatar" class="img-fluid" alt="User Image">
                                            </a>
                                        </div>
                                        <div class="doc-info-cont">
                                            <h4 class="doc-name"><a href="@($"/expert-profile/{doctor.UserId}")">Dr. @doctor.Name</a></h4>
                                            <p class="doc-speciality">MBBS, MD</p> <!-- Replace with actual qualifications if stored -->
                                            <h5 class="doc-department">
                                                <img src="@GetSpecialtyIcon(doctor.Specialty.Name)" class="img-fluid" alt="Speciality"> @doctor.Specialty.Name
                                            </h5>
                                            <div class="rating">
                                                @for (int i = 0; i < 5; i++)
                                                {
                                                    <i class="fas fa-star @(i < doctor.Rating ? "filled" : "")"></i>
                                                }
                                                <span class="d-inline-block average-rating">(@doctor.FeedbackCount)</span>
                                            </div>
                                            <div class="clinic-details">
                                                <p class="doc-location"><i class="fas fa-map-marker-alt"></i> @doctor.Location</p>
                                                <ul class="clinic-gallery">
                                                    @foreach (var photo in doctor.ClinicPhotos)
                                                    {
                                                        <li>
                                                            <a href="@photo" data-fancybox="gallery">
                                                                <img src="@photo" alt="Feature">
                                                            </a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                            <div class="clinic-services">
                                                <span>Consultation</span>
                                                <!-- Add more services dynamically if available -->
                                            </div>
                                        </div>
                                    </div>
                                    <div class="doc-info-right">
                                        <div class="clini-infos">
                                            <ul>
                                                <li><i class="far fa-thumbs-up"></i> @doctor.ApprovalRating%</li>
                                                <li><i class="far fa-comment"></i> @doctor.FeedbackCount Feedback</li>
                                                <li><i class="fas fa-map-marker-alt"></i> @doctor.Location</li>
                                                <li><i class="far fa-money-bill-alt"></i> $@doctor.Price <i class="fas fa-info-circle" title="Consultation fee"></i></li>
                                            </ul>
                                        </div>
                                        <div class="clinic-booking">
                                            <a class="view-pro-btn" href="@($"/doctor-profile/{doctor.UserId}")">View Profile</a>
                                            <a class="apt-btn" href="@($"/booking/{doctor.UserId}")">Book Appointment</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="load-more text-center">
                        <button class="btn btn-primary btn-sm" @onclick="LoadMore">Load More</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string? selectedDate;
    private bool filterMale = false;
    private bool filterFemale = false;
    private List<Specialty> availableSpecialties = new();
    private Dictionary<string, bool> specialtyFilters = new();
    private List<Expert> allDoctors = new();
    private List<Expert> filteredDoctors = new();
    private int pageSize = 5;
    private int currentPage = 1;

    protected override async Task OnInitializedAsync()
    {
        // Load specialties from the database
        availableSpecialties = await DbContext.Specialties.ToListAsync();
        foreach (var specialty in availableSpecialties)
        {
            specialtyFilters[specialty.Name] = false; // Initialize all unchecked
        }
        specialtyFilters["Urology"] = false; // Default checked
        specialtyFilters["Neurology"] = false; // Default checked

        // Fetch experts from UserManager and DbContext
        await LoadDoctors();
        ApplyFilters(); // Initial filter application
    }

    private async Task LoadDoctors()
    {
        var usersInRole = await UserManager.GetUsersInRoleAsync("Expert");
        var expertIds = usersInRole.Select(u => u.Id).ToList();

        allDoctors = await DbContext.Experts
            .Include(e => e.User)
            .Include(e => e.Specialty)
            .Where(e => expertIds.Contains(e.UserId))
            .Select(e => new Expert
                {
                    UserId = e.UserId,
                    Name = e.Name,
                    Specialty = e.Specialty,
                    Price = e.Price,
                    ContactInfo = e.ContactInfo ?? "Not provided",
                    Certificate = e.Certificate ?? "hehe",
                    User = e.User,
                    // Simulated data for display (replace with actual data if available)
                    Avatar = $"assets/img/doctors/doctor-thumb-{new Random().Next(1, 7):D2}.jpg",
                    Rating = new Random().Next(3, 5),
                    FeedbackCount = new Random().Next(4, 52),
                    Location = "USA", // Replace with actual user location if stored
                    ClinicPhotos = new List<string> { "assets/img/features/feature-01.jpg", "assets/img/features/feature-02.jpg", "assets/img/features/feature-03.jpg", "assets/img/features/feature-04.jpg" },
                    ApprovalRating = new Random().Next(90, 100),
                })
            .ToListAsync();

        filteredDoctors = allDoctors.Take(pageSize).ToList();
    }

    private void ApplyFilters()
    {
        var filtered = allDoctors.AsEnumerable();


        // if (filterMale && !filterFemale)
        //     filtered = filtered.Where(d => d.Name.Contains("Dr.")); 
        // else if (!filterMale && filterFemale)
        //     filtered = filtered.Where(d => !d.Name.Contains("Dr.")); 

        // Filter by specialty
        // var selectedSpecialties = specialtyFilters.Where(kv => kv.Value).Select(kv => kv.Key).ToList();
        // if (selectedSpecialties.Any())
        //     filtered = filtered.Where(d => selectedSpecialties.Contains(d.Specialty.Name));

        // filteredDoctors = filtered.Take(pageSize * currentPage).ToList();
        // StateHasChanged();
    }

    private void LoadMore()
    {
        currentPage++;
        ApplyFilters();
    }

    private string GetSpecialtyIcon(string specialty)
    {
        return specialty switch
        {
            "Urology" => "assets/img/specialities/specialities-01.png",
            "Neurology" => "assets/img/specialities/specialities-02.png",
            "Orthopedic" => "assets/img/specialities/specialities-03.png",
            "Cardiology" => "assets/img/specialities/specialities-04.png",
            "Dentist" => "assets/img/specialities/specialities-05.png",
            _ => "assets/img/specialities/specialities-05.png"
        };
    }

    // Doctor model for display purposes (subset of Expert with additional UI data)
    public class Expert
    {
        public string UserId { get; set; }
        public string Name { get; set; }
        public Specialty Specialty { get; set; }
        public decimal Price { get; set; }
        public string ContactInfo { get; set; }
        public string Certificate { get; set; }
        public AppUser User { get; set; }
        public ICollection<ExpertAvailability> ExpertAvailabilities { get; set; }

        // UI-specific properties (simulated for now)
        public string Avatar { get; set; }
        public int Rating { get; set; }
        public int FeedbackCount { get; set; }
        public string Location { get; set; }
        public List<string> ClinicPhotos { get; set; }
        public int ApprovalRating { get; set; }
    }
}
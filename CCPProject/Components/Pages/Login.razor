@page "/signin"
@using CCPProject.Components.Layout
@layout Layout1
@inject NavigationManager NavigationManager

<div class="container-fluid">
    <div class="row account-content">
        <div class="col-md-8 offset-md-2">
            <div class="row align-items-center justify-content-center">
                <div class="col-md-7 col-lg-6 login-left">
                    <img src="assets/img/login-banner.png" class="img-fluid" alt="Login Banner">
                </div>
                <div class="col-md-12 col-lg-6 login-right">
                    <div class="login-header">
                        <h3>Login <span>ChildCare Connect</span></h3>
                    </div>
                    <div class="form-group form-focus">
                        <input type="email" class="form-control floating" id="email" @bind="Email" required placeholder=" " />
                        <label class="focus-label">Email</label>
                    </div>
                    <div class="form-group form-focus">
                        <input type="password" class="form-control floating" id="password" @bind="Password" required placeholder=" " />
                        <label class="focus-label">Password</label>
                    </div>
                    <div class="form-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="rememberMe" @bind="RememberMe" />
                            <label class="form-check-label" for="rememberMe">Remember Me</label>
                        </div>
                    </div>
                    <div class="text-right">
                        <a class="forgot-link" href="forgot-password.html">Forgot Password?</a>
                    </div>
                    <button type="button" class="btn btn-primary btn-block btn-lg login-btn" @onclick="HandleLogin">Login</button>
                    <div class="login-or">
                        <span class="or-line"></span>
                        <span class="span-or">or</span>
                    </div>
                    <div class="row form-row social-login">
                        <div class="col-6">
                            <a href="#" class="btn btn-facebook btn-block"><i class="fab fa-facebook-f mr-1"></i> Login</a>
                        </div>
                        <div class="col-6">
                            <a href="#" class="btn btn-google btn-block"><i class="fab fa-google mr-1"></i> Login</a>
                        </div>
                    </div>
                    <div class="text-center dont-have">Don’t have an account? <a href="/register">Register</a></div>
                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            @ErrorMessage
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private bool RememberMe { get; set; } = false;
    private string ErrorMessage { get; set; } = string.Empty;
    [Parameter]
    [SupplyParameterFromQuery(Name = "error")]
    public string Error { get; set; }

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Error))
        {
            ErrorMessage = Error;
        }
    }
    private void HandleLogin()
    {
        if (string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(Password))
        {
            ErrorMessage = "Please enter both email and password.";
            return;
        }

        // Construct the URL with query parameters
        var uri = $"/LoginProcess?email={Uri.EscapeDataString(Email)}&password={Uri.EscapeDataString(Password)}&rememberMe={RememberMe}";
        NavigationManager.NavigateTo(uri, forceLoad: true); // forceLoad ensures server-side navigation
    }
    // Optional: You could handle form submission here and set ErrorMessage if needed,
    // but since we're passing to .cshtml, we'll let it handle the logic.
}
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime

<div class="main-wrapper">
    <!-- Header -->
    <header class="header">
        <nav class="navbar navbar-expand-lg header-nav">
            <div class="navbar-header">
                <a id="mobile_btn" href="javascript:void(0);" @onclick="ToggleMobileMenu">
                    <span class="bar-icon">
                        <span></span>
                        <span></span>
                        <span></span>
                    </span>
                </a>
                <a href="/" class="navbar-brand logo">
                    <img src="assets/img/logo.png" class="img-fluid" alt="Logo" />
                </a>
            </div>
            <div class="main-menu-wrapper @(isMobileMenuOpen ? "show" : "")">
                <div class="menu-header">
                    <a href="/" class="menu-logo">
                        <img src="assets/img/logo.png" class="img-fluid" alt="Logo" />
                    </a>
                    <a id="menu_close" class="menu-close" href="javascript:void(0);" @onclick="ToggleMobileMenu">
                        <i class="fas fa-times"></i>
                    </a>
                </div>
                <ul class="main-nav">
                    <li><a href="#" @onclick='() => NavigateTo("/")'>Home</a></li>
                    <li class="has-submenu @(activeMenu == "Doctors" ? "active" : "")">
                        <a href="#" @onclick='() => ToggleSubmenu("Doctors")'>Doctors <i class="fas fa-chevron-down"></i></a>
                        @if (activeMenu == "Doctors")
                        {
                            <ul class="submenu show">
                                <li><a href="#" @onclick='() => NavigateTo("/doctor-dashboard")'>Doctor Dashboard</a></li>
                                <li><a href="#" @onclick='() => NavigateTo("/appointments")'>Appointments</a></li>
                                <li><a href="#" @onclick='() => NavigateTo("/my-patients")'>Patients List</a></li>
                            </ul>
                        }
                        </li>
                    <li class="has-submenu @(activeMenu == "Patients" ? "active" : "")">
                        <a href="#" @onclick='() => ToggleSubmenu("Patients")'>Patients <i class="fas fa-chevron-down"></i></a>
                            @if (activeMenu == "Patients")
                            {
                            <ul class="submenu show">
                                <li><a href="#" @onclick='() => NavigateTo("/search")'>Search Doctor</a></li>
                                <li><a href="#" @onclick='() => NavigateTo("/doctor-profile")'>Doctor Profile</a></li>
                                <li><a href="#" @onclick='() => NavigateTo("/booking")'>Booking</a></li>
                                <li><a href="#" @onclick='() => NavigateTo("/patient-dashboard")'>Patient Dashboard</a></li>
                            </ul>
                            }
                    </li>
                    @if (isAuthenticated)
                    {
                        <li><a href="#" @onclick="Logout">Logout</a></li>
                    }
                    else
                    {
                        <li class="login-link"><a href="#" @onclick='() => NavigateTo("/login")'>Login / Signup</a></li>
                    }
                </ul>
            </div>
            <ul class="nav header-navbar-rht">
                <li class="nav-item contact-item">
                    <div class="header-contact-img">
                        <i class="far fa-hospital"></i>
                    </div>
                    <div class="header-contact-detail">
                        <p class="contact-header">Contact</p>
                        <p class="contact-info-header">+1 315 369 5943</p>
                    </div>
                </li>
                @if (!isAuthenticated)
                {
                    <li class="nav-item">
                        <a class="nav-link header-login" href="#" @onclick='() => NavigateTo("/login")'>Login / Signup</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <span class="nav-link">Hello, @(userName ?? "User")!</span>
                    </li>
                }
            </ul>
        </nav>
    </header>

    <!-- Breadcrumb -->
    <div class="breadcrumb-bar">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-md-12 col-12">
                    <nav aria-label="breadcrumb" class="page-breadcrumb">
                        <ol class="breadcrumb">
                            @foreach (var crumb in Breadcrumbs)
                            {
                                if (crumb.IsActive)
                                {
                                    <li class="breadcrumb-item active" aria-current="page">@crumb.Text</li>
                                }
                                else
                                {
                                    <li class="breadcrumb-item"><a href="#" @onclick="() => NavigateTo(crumb.Url)">@crumb.Text</a></li>
                                }
                            }
                        </ol>
                    </nav>
                    <h2 class="breadcrumb-title">@(BreadcrumbTitle ?? "Default Title")</h2>
                </div>
            </div>
        </div>
    </div>

    <!-- Page Content -->
    <div class="content">
        @Body
    </div>

    <!-- Footer -->
    <footer class="footer">
        <div class="footer-bottom">
            <div class="container-fluid">
                <div class="copyright">
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <div class="copyright-text">
                                <p class="mb-0"><a href="templateshub.net">Templates Hub</a></p>
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-6">
                            <div class="copyright-menu">
                                <ul class="policy-menu">
                                    <li><a href="#" @onclick='() => NavigateTo("/terms")'>Terms and Conditions</a></li>
                                    <li><a href="#" @onclick='() => NavigateTo("/policy")'>Policy</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
</div>

@code {
    private bool isMobileMenuOpen = false;
    private string? activeMenu = null;
    private bool isAuthenticated = false;
    private string? userName = null; 
    public List<BreadcrumbItem> Breadcrumbs { get; set; } = new();
    public string? BreadcrumbTitle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        if (isAuthenticated)
        {
            userName = user.Identity?.Name ?? "User";
        }

        if (!Breadcrumbs.Any())
        {
            Breadcrumbs = new List<BreadcrumbItem>
            {
                new BreadcrumbItem { Text = "Home", Url = "/", IsActive = false },
                new BreadcrumbItem { Text = "Page", Url = NavigationManager.Uri, IsActive = true }
            };
            BreadcrumbTitle = "Page";
        }
    }

    private void ToggleMobileMenu() => isMobileMenuOpen = !isMobileMenuOpen;

    private void ToggleSubmenu(string menu) => activeMenu = activeMenu == menu ? null : menu;

    private void NavigateTo(string uri) => NavigationManager.NavigateTo(uri);

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("BlazorServerAuth.signOut");
        NavigationManager.NavigateTo("/Identity/Account/Logout", forceLoad: true);
    }

    public void SetBreadcrumbs(List<BreadcrumbItem> breadcrumbs, string title)
    {
        Breadcrumbs = breadcrumbs ?? new List<BreadcrumbItem>();
        BreadcrumbTitle = title ?? string.Empty;
        StateHasChanged();
    }

    public class BreadcrumbItem
    {
        public string Text { get; set; } = "";
        public string Url { get; set; } = "";
        public bool IsActive { get; set; }
    }
}
